[
    {
      "Command": "$HasPermanents",
      "Hint": "<strong><font color =\"#8b008b\">$HasPermanents</font></strong><br>Effect: Allow for the player's name or arguments to be used in a conversation. This typically goes at the top of the script before anything else."
    },
    {
      "Command": "$ConversationType",
      "Hint": "<strong><font color =\"#8b008b\">$ConversationTypeCommand</font></strong>(<strong><font color=\"#0000FF\">type</font></strong>: <strong><font color=\"#1b8b51\">u8</font></strong>)<br> <strong>Effect</strong>: Change the display type used for the conversation. 0 is typically used for battle conversations. 1 is for conversations with full busts like supports and most cutscenes."
    },
    {
      "Command": "$Color",
      "Hint": ""
    },
    {
      "Command": "$NewSpeaker",
      "Hint": "<strong><font color =\"#8b008b\">$NewSpeaker</font></strong>(<strong><font color=\"#0000FF\">character</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>)<br> <strong>Effect</strong>: Add a new speaker to the conversation. After this command, you should use the <strong><font color =\"#8b008b\">$Reposition</font></strong> command to place them in the scene. The speaker name is determined by the name value in the <strong><code>\"Portraits / FaceData\"</code></strong> module. If you need to use different portraits with the same name, add a portrait override to <strong><code>\"Modules/ServiceData/FE14PortraitOverrides.json\"</code></strong>."
    },
    {
      "Command": "$Reposition",
      "Hint": "<strong><font color =\"#8b008b\">$Reposition</font></strong>(<strong><font color=\"#0000FF\">position</font></strong>: <strong><font color=\"#1b8b51\">u8</font></strong>)<br> <strong>Effect</strong>: Sets the active speaker's position in the scene. For conversation type 1, 3 positions a speaker to the left. 7 positions a speaker to the right."
    },
    {
      "Command": "$SetSpeaker",
      "Hint": "<strong><font color =\"#8b008b\">$SetSpeaker</font></strong>(<strong><font color=\"#0000FF\">character</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>)<br> <strong>Effect</strong>: Change the active speaker. This determines whose portrait is highlighted and who shows up on the name plate for the next message."
    },
    {
      "Command": "$Emotions",
      "Hint": "<strong><font color =\"#8b008b\">$Emotions</font></strong>(<strong><font color=\"#0000FF\">standard</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>, <strong><font color=\"#0000FF\">blush</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>, <strong><font color=\"#0000FF\">sweat</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>)<br> <strong>Effect</strong>: Apply all emotions between the parentheses to the active speaker. Emotions are translated from Japanese. If a translation does not exist, Paragon will display the untranslated text. If you want to change an emotion's translation or add new translations, modify <strong><code>\"Modules/ServiceData/FE14EmotionTranslations.json\"</code></strong>."
    },
    {
      "Command": "$PlayVoice",
      "Hint": "<strong><font color =\"#8b008b\">$PlayVoice</font></strong>(<strong><font color=\"#0000FF\">voice</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>)<br> <strong>Effect</strong>: Play the given voice line."
    },
    {
      "Command": "$PlaySoundEffect",
      "Hint": "<strong><font color =\"#8b008b\">$PlaySoundEffect</font></strong>(<strong><font color=\"#0000FF\">sound_effect</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>)<br> <strong>Effect</strong>: Play the given sound effect."
    },
    {
      "Command": "$PlayMusic",
      "Hint": "<strong><font color =\"#8b008b\">$PlayMusic</font></strong>(<strong><font color=\"#0000FF\">sound_effect</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>, <strong><font color=\"#0000FF\">timer</font></strong>: <strong><font color=\"#1b8b51\">u32</font></strong>)<br> <strong>Effect</strong>: Play the given music after the given number of milliseconds."
    },
    {
      "Command": "$StopMusic",
      "Hint": "<strong><font color =\"#8b008b\">$StopMusic</font></strong>(<strong><font color=\"#0000FF\">timer</font></strong>: <strong><font color=\"#1b8b51\">u32</font></strong>)<br> <strong>Effect</strong>: Stop any playing after after the given number of milliseconds."
    },
    {
      "Command": "$Alias",
      "Hint": "<strong><font color =\"#8b008b\">$Alias</font></strong>(<strong><font color=\"#0000FF\">custom_name</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>)<br> <strong>Effect</strong>: Give the active speaker a different display name."
    },
    {
      "Command": "$Await",
      "Hint": "<strong><font color =\"#8b008b\">$Alias</font></strong><br><strong>Effect</strong>: Wait for a button press before continuing."
    },
    {
      "Command": "$AwaitAndClear",
      "Hint": "<strong><font color =\"#8b008b\">$AwaitAndClear</font><br></strong><strong>Effect</strong>: Wait for a button press. Once one is received, clear the textbox. This is equivalent to <strong><code>$k\\n</code></strong> in the game's script."
    },
    {
      "Command": "$Clear",
      "Hint": "<strong><font color =\"#8b008b\">$Clear</font><br></strong><strong>Effect</strong>: Clear the textbox. This is equivalent to <strong><code>$p</code></strong> in the game script."
    },
    {
      "Command": "$DeleteSpeaker",
      "Hint": "<strong><font color =\"#8b008b\">$DeleteSpeaker</font><br></strong><strong>Effect</strong>: Remove the active speaker from the scene."
    },
    {
      "Command": "$Panicked",
      "Hint": "<strong><font color =\"#8b008b\">$Panicked</font><br></strong><strong>Effect</strong>: Change the textbox graphic to a panicked variant."
    },
    {
      "Command": "$Scrolling",
      "Hint": "<strong><font color =\"#8b008b\">$Scrolling</font><br></strong><strong>Effect</strong>: Change the animation for textbox changes."
    },
    {
      "Command": "$CutsceneAction",
      "Hint": ""
    },
    {
      "Command": "$Wait",
      "Hint": "<strong><font color =\"#8b008b\">$Wait</font></strong>(<strong><font color=\"#0000FF\">timer</font></strong>: <strong><font color=\"#1b8b51\">u32</font></strong>)<br> <strong>Effect</strong>: Wait the given number of milliseconds before proceeding."
    },
    {
      "Command": "$Volume",
      "Hint": "<strong><font color =\"#8b008b\">$Volume</font></strong>(<strong><font color=\"#0000FF\">music_volume</font></strong>: <strong><font color=\"#1b8b51\">u32</font></strong>, <strong><font color=\"#0000FF\">timer</font></strong>: <strong><font color=\"#1b8b51\">u32</font></strong>)<br> <strong>Effect</strong>: Change the music volume to the given number after the given number of milliseconds."
    },
    {
      "Command": "$Dramatic",
      "Hint": "<strong><font color =\"#8b008b\">$Dramatic</font></strong>(<strong><font color=\"#0000FF\">volume</font></strong>: <strong><font color=\"#1b8b51\">u32</font></strong>)<br> <strong>Effect</strong>: Still being researched. Appears to stop the music and play a dramatic noise at the given volume."
    },
    {
      "Command": "$DramaticMusic",
      "Hint": ""
    },
    {
      "Command": "$OverridePortrait",
      "Hint": "<strong><font color =\"#8b008b\">$OverridePortrait</font></strong>(<strong><font color=\"#0000FF\">portrait</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>)<br> <strong>Effect</strong>: Replace the active speaker's portraits with something else."
    },
    {
      "Command": "$ShowMarriageScene",
      "Hint": "<strong><font color =\"#8b008b\">$ShowMarriageScene</font></strong>(<strong><font color=\"#0000FF\">marriage_scene</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>)<br> <strong>Effect</strong>: Play the given Live2D scene. Used for the marriage scene in avatar S supports."
    },
    {
      "Command": "$Ramp",
      "Hint": "<strong><font color =\"#8b008b\">$Ramp</font></strong>(<strong><font color=\"#0000FF\">music</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>, <strong><font color=\"#0000FF\">timer</font></strong>: <strong><font color=\"#1b8b51\">u32</font></strong>)<br> <strong>Effect</strong>: Play the given music starting at a low volume. Increase the volume to full over the given number of milliseconds."
    },
    {
      "Command": "$StopRamp",
      "Hint": "<strong><font color =\"#8b008b\">$StopRamp</font></strong>(<strong><font color=\"#0000FF\">music</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>, <strong><font color=\"#0000FF\">timer</font></strong>: <strong><font color=\"#1b8b51\">u32</font></strong>)<br> <strong>Effect</strong>: Stop a running ramp for the given music after the given number of milliseconds."
    },
    {
      "Command": "$SetRampVolume",
      "Hint": "<strong><font color =\"#8b008b\">$SetRampVolume</font></strong>(<strong><font color=\"#0000FF\">music</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>, <strong><font color=\"#0000FF\">volume</font></strong>: <strong><font color=\"#1b8b51\">u32</font></strong>, <strong><font color=\"#0000FF\">timer</font></strong>: <strong><font color=\"#1b8b51\">u32</font></strong>)<br> <strong>Effect</strong>: Change the running ramp for the given music to a new volume after the given number of milliseconds."
    },
    {
      "Command": "$FadeIn",
      "Hint": "<strong><font color =\"#8b008b\">$FadeIn</font></strong>(<strong><font color=\"#0000FF\">timer</font></strong>: <strong><font color=\"#1b8b51\">u32</font></strong>)<br> <strong>Effect</strong>: Fade in over the given number of milliseconds."
    },
    {
      "Command": "$FadeOut",
      "Hint": "<strong><font color =\"#8b008b\">$FadeOut</font></strong>(<strong><font color=\"#0000FF\">timer</font></strong>: <strong><font color=\"#1b8b51\">u32</font></strong>)<br> <strong>Effect</strong>: Fade to black over the given number of milliseconds."
    },
    {
      "Command": "$FadeWhite",
      "Hint": "<strong><font color =\"#8b008b\">$FadeWhite</font></strong>(<strong><font color=\"#0000FF\">timer</font></strong>: <strong><font color=\"#1b8b51\">u32</font></strong>)<br> <strong>Effect</strong>: Fade to white over the given number of milliseconds."
    },
    {
      "Command": "$nl",
      "Hint": ""
    },
    {
      "Command": "$Nu",
      "Hint": "<strong><font color =\"#8b008b\">$FadeWhite</font></strong><br><strong>Effect</strong>: Show the avatar's name in the textbox."
    },
    {
      "Command": "$G",
      "Hint": "<strong><font color =\"#8b008b\">$G</font></strong>(<strong><font color=\"#0000FF\">male_text</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>, <strong><font color=\"#0000FF\">female_text</font></strong>: <strong><font color=\"#1b8b51\">String</font></strong>)<br> <strong>Effect</strong>: Show different text in the textbox depending on the avatar's gender."
    },
    {
      "Command": "$arg",
      "Hint": "<strong><font color =\"#8b008b\">$arg</font></strong>(<strong><font color=\"#0000FF\">value</font></strong>: <strong><font color=\"#1b8b51\">T</font></strong>)<br> <strong>Effect</strong>: Show the value of the given argument in the textbox. Used to print numbers and text from CMB scripts."
    },
    {
      "Command": "$VisualEffect",
      "Hint": ""
    }
  ]