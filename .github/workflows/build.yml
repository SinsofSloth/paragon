name: Python package

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build Rust component
      run: |
        maturin build --release

    - name: Package application (MacOS)
      if: runner.os == 'macOS'
      run: |
        pip install target/wheels/*.whl
        cd application
        pyinstaller main.py --noconsole --onefile --name=paragon
        rm -rf dist/paragon.app
        cp paragon.ico dist/paragon.ico
        cp -R Assets dist/Assets
        cp -R Modules dist/Modules

    - name: Package application (Windows)
      if: runner.os == 'Windows'
      run: |
        .\cicd\package.bat

    - uses: actions/upload-artifact@v2
      with:
        name: Paragon-${{ runner.os }}
        path: application/dist
